{
    "sourceFile": "main/st7796s.h",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1731815031194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732332356186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+// main/st7796s.h\r\n+\r\n #ifndef MAIN_ST7796S_H_\r\n #define MAIN_ST7796S_H_\r\n \r\n #include \"driver/spi_master.h\"\r\n@@ -53,10 +55,11 @@\n // Delay function\r\n void delayMS(int ms);\r\n \r\n // LCD initialization\r\n-void lcdInit(TFT_t *dev, int width, int height, int offsetx, int offsety);\r\n+void lcdInit(TFT_t *dev, int width, int height, int offsetx, int offsety, uint8_t orientation);\r\n \r\n+\r\n // Drawing functions\r\n void lcdDrawPixel(TFT_t *dev, uint16_t x, uint16_t y, uint16_t color);\r\n void lcdDrawMultiPixels(TFT_t *dev, uint16_t x, uint16_t y, uint16_t size, uint16_t *colors);\r\n void lcdDrawFillRect(TFT_t *dev, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color);\r\n"
                }
            ],
            "date": 1731815031194,
            "name": "Commit-0",
            "content": "#ifndef MAIN_ST7796S_H_\r\n#define MAIN_ST7796S_H_\r\n\r\n#include \"driver/spi_master.h\"\r\n#include \"fontx.h\"\r\n\r\n// Color definitions in RGB565 format\r\n#define RED             0xF800\r\n#define GREEN           0x07E0\r\n#define BLUE            0x001F\r\n#define BLACK           0x0000\r\n#define WHITE           0xFFFF\r\n#define GRAY            0x8410\r\n#define YELLOW          0xFFE0\r\n#define CYAN            0x07FF\r\n#define PURPLE          0xF81F\r\n\r\n// Display orientations\r\n#define DIRECTION0      0\r\n#define DIRECTION90     1\r\n#define DIRECTION180    2\r\n#define DIRECTION270    3\r\n\r\ntypedef struct {\r\n    uint16_t _width;\r\n    uint16_t _height;\r\n    uint16_t _offsetx;\r\n    uint16_t _offsety;\r\n    uint16_t _font_direction;\r\n    bool     _font_fill;\r\n    uint16_t _font_fill_color;\r\n    bool     _font_underline;\r\n    uint16_t _font_underline_color;\r\n    int16_t  _dc;\r\n    int16_t  _bl;\r\n    int16_t  _reset;\r\n    spi_device_handle_t _SPIHandle;\r\n} TFT_t;\r\n\r\n// SPI initialization\r\nvoid spi_master_init(TFT_t *dev, int16_t GPIO_MOSI, int16_t GPIO_SCLK, int16_t GPIO_CS,\r\n                     int16_t GPIO_DC, int16_t GPIO_RESET, int16_t GPIO_BL);\r\n\r\n// SPI communication functions\r\nbool spi_master_write_byte(spi_device_handle_t SPIHandle, const uint8_t *Data, size_t DataLength);\r\nbool spi_master_write_command(TFT_t *dev, uint8_t cmd);\r\nbool spi_master_write_data_byte(TFT_t *dev, uint8_t data);\r\nbool spi_master_write_data_word(TFT_t *dev, uint16_t data);\r\nbool spi_master_write_addr(TFT_t *dev, uint16_t addr1, uint16_t addr2);\r\nbool spi_master_write_color(TFT_t *dev, uint16_t color, uint32_t size);\r\nbool spi_master_write_colors(TFT_t *dev, uint16_t *colors, uint16_t size);\r\n\r\n// Delay function\r\nvoid delayMS(int ms);\r\n\r\n// LCD initialization\r\nvoid lcdInit(TFT_t *dev, int width, int height, int offsetx, int offsety);\r\n\r\n// Drawing functions\r\nvoid lcdDrawPixel(TFT_t *dev, uint16_t x, uint16_t y, uint16_t color);\r\nvoid lcdDrawMultiPixels(TFT_t *dev, uint16_t x, uint16_t y, uint16_t size, uint16_t *colors);\r\nvoid lcdDrawFillRect(TFT_t *dev, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color);\r\nvoid lcdFillScreen(TFT_t *dev, uint16_t color);\r\nvoid lcdDrawLine(TFT_t *dev, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color);\r\nvoid lcdDrawRect(TFT_t *dev, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color);\r\nvoid lcdDrawRectAngle(TFT_t *dev, uint16_t xc, uint16_t yc, uint16_t w, uint16_t h,\r\n                      uint16_t angle, uint16_t color);\r\nvoid lcdDrawTriangle(TFT_t *dev, uint16_t xc, uint16_t yc, uint16_t w, uint16_t h,\r\n                     uint16_t angle, uint16_t color);\r\nvoid lcdDrawCircle(TFT_t *dev, uint16_t x0, uint16_t y0, uint16_t r, uint16_t color);\r\nvoid lcdDrawFillCircle(TFT_t *dev, uint16_t x0, uint16_t y0, uint16_t r, uint16_t color);\r\nvoid lcdDrawRoundRect(TFT_t *dev, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2,\r\n                      uint16_t r, uint16_t color);\r\nvoid lcdDrawArrow(TFT_t *dev, uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1,\r\n                  uint16_t w, uint16_t color);\r\nvoid lcdDrawFillArrow(TFT_t *dev, uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1,\r\n                      uint16_t w, uint16_t color);\r\n\r\n// Color conversion\r\nuint16_t rgb565_conv(uint16_t r, uint16_t g, uint16_t b);\r\n\r\n// Font drawing functions\r\nint lcdDrawChar(TFT_t *dev, FontxFile *fx, uint16_t x, uint16_t y,\r\n                uint8_t ascii, uint16_t color);\r\nint lcdDrawString(TFT_t *dev, FontxFile *fx, uint16_t x, uint16_t y,\r\n                  uint8_t *ascii, uint16_t color);\r\nint lcdDrawCode(TFT_t *dev, FontxFile *fx, uint16_t x, uint16_t y,\r\n                uint8_t code, uint16_t color);\r\n// int lcdDrawUTF8Char(TFT_t *dev, FontxFile *fx, uint16_t x, uint16_t y,\r\n//                     uint8_t *utf8, uint16_t color);\r\n// int lcdDrawUTF8String(TFT_t *dev, FontxFile *fx, uint16_t x, uint16_t y,\r\n//                       unsigned char *utfs, uint16_t color);\r\n\r\n// Font settings\r\nvoid lcdSetFontDirection(TFT_t *dev, uint16_t dir);\r\nvoid lcdSetFontFill(TFT_t *dev, uint16_t color);\r\nvoid lcdUnsetFontFill(TFT_t *dev);\r\nvoid lcdSetFontUnderLine(TFT_t *dev, uint16_t color);\r\nvoid lcdUnsetFontUnderLine(TFT_t *dev);\r\n\r\n// Display control functions\r\nvoid lcdDisplayOff(TFT_t *dev);\r\nvoid lcdDisplayOn(TFT_t *dev);\r\nvoid lcdInversionOff(TFT_t *dev);\r\nvoid lcdInversionOn(TFT_t *dev);\r\nvoid lcdBacklightOff(TFT_t *dev);\r\nvoid lcdBacklightOn(TFT_t *dev);\r\n\r\n#endif /* MAIN_ST7796S_H_ */\r\n"
        }
    ]
}